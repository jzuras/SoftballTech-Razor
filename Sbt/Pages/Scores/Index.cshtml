@page "{organization}/{divisionID}"

@model Sbt.Pages.Scores.IndexModel

@{
    ViewData["Title"] = Model.Schedules[0].Organization;
}

<h1>@Model.Schedules[0].Organization - Report Scores</h1>


<p />
<hr />
<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Schedules[0].Division)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Schedules[0].Division)
        </dd>
    </dl>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Schedules[0].Day)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Schedules[0].Day)
        </dd>
    </dl>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Schedules[0].Field)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Schedules[0].Field)
        </dd>
    </dl>
</div>
<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    @{
        var index = 0;

        foreach (var game in Model.Schedules)
        {
            await Html.RenderPartialAsync("_ScoreSingle", Model,
            new ViewDataDictionary(ViewData)
                {
                    { "index", index }
                });
            index++;
        }
    }

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
